<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
  <%- include('header') %>
  <style>
    body {
      height: 2000px;
      transition: background-color 0.3s ease;
    }

    .title {
      text-align: center;
      margin-top: 150px;
    }
  </style>
    
    
   
     
    <style>
        .highlight-heading {
          padding: 30px;
          text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
          font-weight: 700;
          font-family: Arial, sans-serif;
          font-size: 56px;
          color: #333;
         
          border-radius: 10px;
          text-align: center;
        }
      
        @media screen and (max-width: 480px) {
          .highlight-heading {
            font-size: 24px;
            padding: 20px;
          }
        }
      </style>
      
      <h1 class="highlight-heading">Welcome to My Website</h1>
      
    






<style>
  .resume-container {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
  }

  .resume-content {
    text-align: center;
    font-size: 24px;
    font-family: 'Arial', sans-serif;
    color: white;
  }

  @media (max-width: 768px) {
    .resume-content {
      font-size: 18px;
      padding-right: 10px;
      padding-left: 10px;
    }
  }
  p {
  padding: 10px;
  padding-right: 40px;
  padding-left: 40px;
  font-weight: bold;
  font-family: "Oswald", sans-serif;
}

</style>

<div class="resume-container">
  <div class="resume-content">
    <p></p>
    <p></p>
    <p></p>
    <p></p>
    <p></p>
    <p></p>
    <p></p>
    <p></p>
    <p></p>
    <p>
      <p>
        <span style="color: white;"></span>Results-driven JavaScript programmer with a strong command over front-end development and a passion for creating interactive and responsive web applications. Proficient in leveraging JavaScript frameworks and libraries such as React and Angular to build robust user interfaces. Experienced in developing RESTful APIs and integrating them with server-side technologies like Node.js. Skilled in optimizing code performance and troubleshooting complex bugs. A collaborative team player with excellent problem-solving abilities and a constant desire to learn and adapt to new technologies and industry best practices.
    </p>
    </span>
      
  </p>
  
  </div>
</div>



<h1 class="highlight-heading" style="color: white; text-shadow: none;"></h1>
<h1 class="highlight-heading" style="color: white; text-shadow: none;"></h1>


<div class="resume-container">
  <div class="resume-content">
    
    <p style="color: rgb(124, 181, 181);">I possess strong IT skills in front-end web development, specializing in React.js, TypeScript, jQuery, and HTML5/CSS3.

      With expertise in React.js and TypeScript, I excel at building interactive and dynamic user interfaces. Leveraging React components and TypeScript's type-checking capabilities, I ensure efficient state management and enhance code reliability.
      
      Additionally, I have a solid understanding of jQuery, a widely-used JavaScript library. I leverage jQuery to streamline tasks like event handling, animation, and AJAX requests, enhancing the functionality and user experience of web applications.
      
      </p>
  </div>
</div>

 
  <%- include('me') %>
  <p></p>
  <p></p>
  <p></p>
  <%- include('skill') %>
  <script>
    class ColorChanger {
      constructor() {
        this.body = document.body;
        this.originalBackgroundColor = getComputedStyle(this.body).backgroundColor;
        this.scrollHandler = this.scrollHandler.bind(this);
        this.isColorChanged = false;
        this.previousScrollPosition = 0;
      }

      scrollHandler() {
        const scrollPosition = window.scrollY;
        const threshold = 150; // Adjust this value as needed

        if (scrollPosition > threshold && !this.isColorChanged) {
          this.changeBackgroundColor('rgb(124, 181, 181)');
          this.isColorChanged = true;
        } else if (scrollPosition <= threshold && this.isColorChanged) {
          this.changeBackgroundColor(this.originalBackgroundColor);
          this.isColorChanged = false;
        }

        if (scrollPosition < this.previousScrollPosition && this.isColorChanged) {
          this.changeBackgroundColor(this.originalBackgroundColor);
          this.isColorChanged = false;
        }

        this.previousScrollPosition = scrollPosition;
      }

      changeBackgroundColor(color) {
        this.body.style.backgroundColor = color;
      }

      start() {
        window.addEventListener('scroll', this.scrollHandler);
        window.addEventListener('scroll', this.resetColorHandler.bind(this));
      }

      stop() {
        window.removeEventListener('scroll', this.scrollHandler);
        window.removeEventListener('scroll', this.resetColorHandler.bind(this));
      }

      resetColorHandler() {
        const scrollPosition = window.scrollY;
        const resetThreshold = 500; // Adjust this value as needed

        if (scrollPosition > resetThreshold) {
          this.changeBackgroundColor(this.originalBackgroundColor);
          this.isColorChanged = false;
        }
      }
    }

    // Wait for DOM content to load
    document.addEventListener('DOMContentLoaded', function() {
      // Example usage
      const colorChanger = new ColorChanger();
      colorChanger.start();
    });
  </script>
  
    <%- include('footer') %>
</body>
</html>